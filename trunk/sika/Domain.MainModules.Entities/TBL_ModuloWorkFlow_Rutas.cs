//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_Admin_EstadosProceso))]
    [KnownType(typeof(TBL_ModuloWorkFlow_ValidacionesSalida))]
    
    public partial class TBL_ModuloWorkFlow_Rutas: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdRuta
        {
            get { return _idRuta; }
            set
            {
                if (_idRuta != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdRuta' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idRuta = value;
                    OnPropertyChanged("IdRuta");
                }
            }
        }
        private int _idRuta;
    
        [DataMember]
        public int IdEstado
        {
            get { return _idEstado; }
            set
            {
                if (_idEstado != value)
                {
                    ChangeTracker.RecordOriginalValue("IdEstado", _idEstado);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_EstadosProceso != null && TBL_Admin_EstadosProceso.IdEstado != value)
                        {
                            TBL_Admin_EstadosProceso = null;
                        }
                    }
                    _idEstado = value;
                    OnPropertyChanged("IdEstado");
                }
            }
        }
        private int _idEstado;
    
        [DataMember]
        public Nullable<int> Secuencia
        {
            get { return _secuencia; }
            set
            {
                if (_secuencia != value)
                {
                    _secuencia = value;
                    OnPropertyChanged("Secuencia");
                }
            }
        }
        private Nullable<int> _secuencia;
    
        [DataMember]
        public string Rol
        {
            get { return _rol; }
            set
            {
                if (_rol != value)
                {
                    _rol = value;
                    OnPropertyChanged("Rol");
                }
            }
        }
        private string _rol;
    
        [DataMember]
        public string FormulaValidacion
        {
            get { return _formulaValidacion; }
            set
            {
                if (_formulaValidacion != value)
                {
                    _formulaValidacion = value;
                    OnPropertyChanged("FormulaValidacion");
                }
            }
        }
        private string _formulaValidacion;
    
        [DataMember]
        public bool ValidaRequeridos
        {
            get { return _validaRequeridos; }
            set
            {
                if (_validaRequeridos != value)
                {
                    _validaRequeridos = value;
                    OnPropertyChanged("ValidaRequeridos");
                }
            }
        }
        private bool _validaRequeridos;
    
        [DataMember]
        public string BotonAccionesRutas
        {
            get { return _botonAccionesRutas; }
            set
            {
                if (_botonAccionesRutas != value)
                {
                    _botonAccionesRutas = value;
                    OnPropertyChanged("BotonAccionesRutas");
                }
            }
        }
        private string _botonAccionesRutas;
    
        [DataMember]
        public Nullable<int> SiguienteEstado
        {
            get { return _siguienteEstado; }
            set
            {
                if (_siguienteEstado != value)
                {
                    ChangeTracker.RecordOriginalValue("SiguienteEstado", _siguienteEstado);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_EstadosProceso1 != null && TBL_Admin_EstadosProceso1.IdEstado != value)
                        {
                            TBL_Admin_EstadosProceso1 = null;
                        }
                    }
                    _siguienteEstado = value;
                    OnPropertyChanged("SiguienteEstado");
                }
            }
        }
        private Nullable<int> _siguienteEstado;
    
        [DataMember]
        public string RolResponsableActual
        {
            get { return _rolResponsableActual; }
            set
            {
                if (_rolResponsableActual != value)
                {
                    _rolResponsableActual = value;
                    OnPropertyChanged("RolResponsableActual");
                }
            }
        }
        private string _rolResponsableActual;
    
        [DataMember]
        public string TipoModulo
        {
            get { return _tipoModulo; }
            set
            {
                if (_tipoModulo != value)
                {
                    _tipoModulo = value;
                    OnPropertyChanged("TipoModulo");
                }
            }
        }
        private string _tipoModulo;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public Nullable<System.DateTime> CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private Nullable<System.DateTime> _createOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public Nullable<System.DateTime> ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private Nullable<System.DateTime> _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_Admin_EstadosProceso TBL_Admin_EstadosProceso
        {
            get { return _tBL_Admin_EstadosProceso; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_EstadosProceso, value))
                {
                    var previousValue = _tBL_Admin_EstadosProceso;
                    _tBL_Admin_EstadosProceso = value;
                    FixupTBL_Admin_EstadosProceso(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_EstadosProceso");
                }
            }
        }
        private TBL_Admin_EstadosProceso _tBL_Admin_EstadosProceso;
    
        [DataMember]
        public TBL_Admin_EstadosProceso TBL_Admin_EstadosProceso1
        {
            get { return _tBL_Admin_EstadosProceso1; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_EstadosProceso1, value))
                {
                    var previousValue = _tBL_Admin_EstadosProceso1;
                    _tBL_Admin_EstadosProceso1 = value;
                    FixupTBL_Admin_EstadosProceso1(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_EstadosProceso1");
                }
            }
        }
        private TBL_Admin_EstadosProceso _tBL_Admin_EstadosProceso1;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloWorkFlow_ValidacionesSalida> TBL_ModuloWorkFlow_ValidacionesSalida
        {
            get
            {
                if (_tBL_ModuloWorkFlow_ValidacionesSalida == null)
                {
                    _tBL_ModuloWorkFlow_ValidacionesSalida = new TrackableCollection<TBL_ModuloWorkFlow_ValidacionesSalida>();
                    _tBL_ModuloWorkFlow_ValidacionesSalida.CollectionChanged += FixupTBL_ModuloWorkFlow_ValidacionesSalida;
                }
                return _tBL_ModuloWorkFlow_ValidacionesSalida;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloWorkFlow_ValidacionesSalida, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloWorkFlow_ValidacionesSalida != null)
                    {
                        _tBL_ModuloWorkFlow_ValidacionesSalida.CollectionChanged -= FixupTBL_ModuloWorkFlow_ValidacionesSalida;
                    }
                    _tBL_ModuloWorkFlow_ValidacionesSalida = value;
                    if (_tBL_ModuloWorkFlow_ValidacionesSalida != null)
                    {
                        _tBL_ModuloWorkFlow_ValidacionesSalida.CollectionChanged += FixupTBL_ModuloWorkFlow_ValidacionesSalida;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloWorkFlow_ValidacionesSalida");
                }
            }
        }
        private TrackableCollection<TBL_ModuloWorkFlow_ValidacionesSalida> _tBL_ModuloWorkFlow_ValidacionesSalida;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_Admin_EstadosProceso = null;
            TBL_Admin_EstadosProceso1 = null;
            TBL_ModuloWorkFlow_ValidacionesSalida.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_Admin_EstadosProceso(TBL_Admin_EstadosProceso previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloWorkFlow_Rutas.Contains(this))
            {
                previousValue.TBL_ModuloWorkFlow_Rutas.Remove(this);
            }
    
            if (TBL_Admin_EstadosProceso != null)
            {
                if (!TBL_Admin_EstadosProceso.TBL_ModuloWorkFlow_Rutas.Contains(this))
                {
                    TBL_Admin_EstadosProceso.TBL_ModuloWorkFlow_Rutas.Add(this);
                }
    
                IdEstado = TBL_Admin_EstadosProceso.IdEstado;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_EstadosProceso")
                    && (ChangeTracker.OriginalValues["TBL_Admin_EstadosProceso"] == TBL_Admin_EstadosProceso))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_EstadosProceso");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_EstadosProceso", previousValue);
                }
                if (TBL_Admin_EstadosProceso != null && !TBL_Admin_EstadosProceso.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_EstadosProceso.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_EstadosProceso1(TBL_Admin_EstadosProceso previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloWorkFlow_Rutas1.Contains(this))
            {
                previousValue.TBL_ModuloWorkFlow_Rutas1.Remove(this);
            }
    
            if (TBL_Admin_EstadosProceso1 != null)
            {
                if (!TBL_Admin_EstadosProceso1.TBL_ModuloWorkFlow_Rutas1.Contains(this))
                {
                    TBL_Admin_EstadosProceso1.TBL_ModuloWorkFlow_Rutas1.Add(this);
                }
    
                SiguienteEstado = TBL_Admin_EstadosProceso1.IdEstado;
            }
            else if (!skipKeys)
            {
                SiguienteEstado = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_EstadosProceso1")
                    && (ChangeTracker.OriginalValues["TBL_Admin_EstadosProceso1"] == TBL_Admin_EstadosProceso1))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_EstadosProceso1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_EstadosProceso1", previousValue);
                }
                if (TBL_Admin_EstadosProceso1 != null && !TBL_Admin_EstadosProceso1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_EstadosProceso1.StartTracking();
                }
            }
        }
    
        private void FixupTBL_ModuloWorkFlow_ValidacionesSalida(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloWorkFlow_ValidacionesSalida item in e.NewItems)
                {
                    item.TBL_ModuloWorkFlow_Rutas = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloWorkFlow_ValidacionesSalida", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloWorkFlow_ValidacionesSalida item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloWorkFlow_Rutas, this))
                    {
                        item.TBL_ModuloWorkFlow_Rutas = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloWorkFlow_ValidacionesSalida", item);
                    }
                }
            }
        }

        #endregion
    }
}
