//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_ModuloWorkFlow_Rutas))]
    
    public partial class TBL_ModuloWorkFlow_ValidacionesSalida: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IdRuta
        {
            get { return _idRuta; }
            set
            {
                if (_idRuta != value)
                {
                    ChangeTracker.RecordOriginalValue("IdRuta", _idRuta);
                    if (!IsDeserializing)
                    {
                        if (TBL_ModuloWorkFlow_Rutas != null && TBL_ModuloWorkFlow_Rutas.IdRuta != value)
                        {
                            TBL_ModuloWorkFlow_Rutas = null;
                        }
                    }
                    _idRuta = value;
                    OnPropertyChanged("IdRuta");
                }
            }
        }
        private int _idRuta;
    
        [DataMember]
        public string NombreEnsamblado
        {
            get { return _nombreEnsamblado; }
            set
            {
                if (_nombreEnsamblado != value)
                {
                    _nombreEnsamblado = value;
                    OnPropertyChanged("NombreEnsamblado");
                }
            }
        }
        private string _nombreEnsamblado;
    
        [DataMember]
        public string NombreMetodo
        {
            get { return _nombreMetodo; }
            set
            {
                if (_nombreMetodo != value)
                {
                    _nombreMetodo = value;
                    OnPropertyChanged("NombreMetodo");
                }
            }
        }
        private string _nombreMetodo;
    
        [DataMember]
        public string TipoAccion
        {
            get { return _tipoAccion; }
            set
            {
                if (_tipoAccion != value)
                {
                    _tipoAccion = value;
                    OnPropertyChanged("TipoAccion");
                }
            }
        }
        private string _tipoAccion;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public Nullable<System.DateTime> CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private Nullable<System.DateTime> _createOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public Nullable<System.DateTime> ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private Nullable<System.DateTime> _modifiedOn;
    
        [DataMember]
        public Nullable<bool> Ejecutar
        {
            get { return _ejecutar; }
            set
            {
                if (_ejecutar != value)
                {
                    _ejecutar = value;
                    OnPropertyChanged("Ejecutar");
                }
            }
        }
        private Nullable<bool> _ejecutar;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_ModuloWorkFlow_Rutas TBL_ModuloWorkFlow_Rutas
        {
            get { return _tBL_ModuloWorkFlow_Rutas; }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloWorkFlow_Rutas, value))
                {
                    var previousValue = _tBL_ModuloWorkFlow_Rutas;
                    _tBL_ModuloWorkFlow_Rutas = value;
                    FixupTBL_ModuloWorkFlow_Rutas(previousValue);
                    OnNavigationPropertyChanged("TBL_ModuloWorkFlow_Rutas");
                }
            }
        }
        private TBL_ModuloWorkFlow_Rutas _tBL_ModuloWorkFlow_Rutas;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_ModuloWorkFlow_Rutas = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_ModuloWorkFlow_Rutas(TBL_ModuloWorkFlow_Rutas previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloWorkFlow_ValidacionesSalida.Contains(this))
            {
                previousValue.TBL_ModuloWorkFlow_ValidacionesSalida.Remove(this);
            }
    
            if (TBL_ModuloWorkFlow_Rutas != null)
            {
                if (!TBL_ModuloWorkFlow_Rutas.TBL_ModuloWorkFlow_ValidacionesSalida.Contains(this))
                {
                    TBL_ModuloWorkFlow_Rutas.TBL_ModuloWorkFlow_ValidacionesSalida.Add(this);
                }
    
                IdRuta = TBL_ModuloWorkFlow_Rutas.IdRuta;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_ModuloWorkFlow_Rutas")
                    && (ChangeTracker.OriginalValues["TBL_ModuloWorkFlow_Rutas"] == TBL_ModuloWorkFlow_Rutas))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_ModuloWorkFlow_Rutas");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_ModuloWorkFlow_Rutas", previousValue);
                }
                if (TBL_ModuloWorkFlow_Rutas != null && !TBL_ModuloWorkFlow_Rutas.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_ModuloWorkFlow_Rutas.StartTracking();
                }
            }
        }

        #endregion
    }
}
