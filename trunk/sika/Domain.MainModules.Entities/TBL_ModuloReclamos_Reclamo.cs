//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_Admin_Usuarios))]
    [KnownType(typeof(TBL_ModuloReclamos_Actividades))]
    [KnownType(typeof(TBL_ModuloReclamos_CategoriasReclamo))]
    [KnownType(typeof(TBL_ModuloReclamos_CostosProducto))]
    [KnownType(typeof(TBL_ModuloReclamos_Reclamo))]
    [KnownType(typeof(TBL_ModuloReclamos_TipoReclamo))]
    [KnownType(typeof(TBL_ModuloReclamos_Soluciones))]
    
    public partial class TBL_ModuloReclamos_Reclamo: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public decimal IdReclamo
        {
            get { return _idReclamo; }
            set
            {
                if (_idReclamo != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdReclamo' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idReclamo = value;
                    OnPropertyChanged("IdReclamo");
                }
            }
        }
        private decimal _idReclamo;
    
        [DataMember]
        public string IdDocumentoLotus
        {
            get { return _idDocumentoLotus; }
            set
            {
                if (_idDocumentoLotus != value)
                {
                    _idDocumentoLotus = value;
                    OnPropertyChanged("IdDocumentoLotus");
                }
            }
        }
        private string _idDocumentoLotus;
    
        [DataMember]
        public string IdDocumentoLotusRelacionado
        {
            get { return _idDocumentoLotusRelacionado; }
            set
            {
                if (_idDocumentoLotusRelacionado != value)
                {
                    _idDocumentoLotusRelacionado = value;
                    OnPropertyChanged("IdDocumentoLotusRelacionado");
                }
            }
        }
        private string _idDocumentoLotusRelacionado;
    
        [DataMember]
        public int Consecutivo
        {
            get { return _consecutivo; }
            set
            {
                if (_consecutivo != value)
                {
                    _consecutivo = value;
                    OnPropertyChanged("Consecutivo");
                }
            }
        }
        private int _consecutivo;
    
        [DataMember]
        public int IdSolicitante
        {
            get { return _idSolicitante; }
            set
            {
                if (_idSolicitante != value)
                {
                    ChangeTracker.RecordOriginalValue("IdSolicitante", _idSolicitante);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios5 != null && TBL_Admin_Usuarios5.IdUser != value)
                        {
                            TBL_Admin_Usuarios5 = null;
                        }
                    }
                    _idSolicitante = value;
                    OnPropertyChanged("IdSolicitante");
                }
            }
        }
        private int _idSolicitante;
    
        [DataMember]
        public int IdTipoReclamo
        {
            get { return _idTipoReclamo; }
            set
            {
                if (_idTipoReclamo != value)
                {
                    ChangeTracker.RecordOriginalValue("IdTipoReclamo", _idTipoReclamo);
                    if (!IsDeserializing)
                    {
                        if (TBL_ModuloReclamos_TipoReclamo != null && TBL_ModuloReclamos_TipoReclamo.IdTipoReclamo != value)
                        {
                            TBL_ModuloReclamos_TipoReclamo = null;
                        }
                    }
                    _idTipoReclamo = value;
                    OnPropertyChanged("IdTipoReclamo");
                }
            }
        }
        private int _idTipoReclamo;
    
        [DataMember]
        public System.DateTime FechaReclamo
        {
            get { return _fechaReclamo; }
            set
            {
                if (_fechaReclamo != value)
                {
                    _fechaReclamo = value;
                    OnPropertyChanged("FechaReclamo");
                }
            }
        }
        private System.DateTime _fechaReclamo;
    
        [DataMember]
        public Nullable<decimal> IdReclamoRelacionado
        {
            get { return _idReclamoRelacionado; }
            set
            {
                if (_idReclamoRelacionado != value)
                {
                    ChangeTracker.RecordOriginalValue("IdReclamoRelacionado", _idReclamoRelacionado);
                    if (!IsDeserializing)
                    {
                        if (TBL_ModuloReclamos_Reclamo2 != null && TBL_ModuloReclamos_Reclamo2.IdReclamo != value)
                        {
                            TBL_ModuloReclamos_Reclamo2 = null;
                        }
                    }
                    _idReclamoRelacionado = value;
                    OnPropertyChanged("IdReclamoRelacionado");
                }
            }
        }
        private Nullable<decimal> _idReclamoRelacionado;
    
        [DataMember]
        public string CampoRelacion
        {
            get { return _campoRelacion; }
            set
            {
                if (_campoRelacion != value)
                {
                    _campoRelacion = value;
                    OnPropertyChanged("CampoRelacion");
                }
            }
        }
        private string _campoRelacion;
    
        [DataMember]
        public string NumeroReclamo
        {
            get { return _numeroReclamo; }
            set
            {
                if (_numeroReclamo != value)
                {
                    _numeroReclamo = value;
                    OnPropertyChanged("NumeroReclamo");
                }
            }
        }
        private string _numeroReclamo;
    
        [DataMember]
        public Nullable<int> IdAsesoradoPor
        {
            get { return _idAsesoradoPor; }
            set
            {
                if (_idAsesoradoPor != value)
                {
                    ChangeTracker.RecordOriginalValue("IdAsesoradoPor", _idAsesoradoPor);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios != null && TBL_Admin_Usuarios.IdUser != value)
                        {
                            TBL_Admin_Usuarios = null;
                        }
                    }
                    _idAsesoradoPor = value;
                    OnPropertyChanged("IdAsesoradoPor");
                }
            }
        }
        private Nullable<int> _idAsesoradoPor;
    
        [DataMember]
        public string Planta
        {
            get { return _planta; }
            set
            {
                if (_planta != value)
                {
                    _planta = value;
                    OnPropertyChanged("Planta");
                }
            }
        }
        private string _planta;
    
        [DataMember]
        public string CodigoProducto
        {
            get { return _codigoProducto; }
            set
            {
                if (_codigoProducto != value)
                {
                    _codigoProducto = value;
                    OnPropertyChanged("CodigoProducto");
                }
            }
        }
        private string _codigoProducto;
    
        [DataMember]
        public Nullable<int> CantidadVendida
        {
            get { return _cantidadVendida; }
            set
            {
                if (_cantidadVendida != value)
                {
                    _cantidadVendida = value;
                    OnPropertyChanged("CantidadVendida");
                }
            }
        }
        private Nullable<int> _cantidadVendida;
    
        [DataMember]
        public Nullable<int> CantidadReclamada
        {
            get { return _cantidadReclamada; }
            set
            {
                if (_cantidadReclamada != value)
                {
                    _cantidadReclamada = value;
                    OnPropertyChanged("CantidadReclamada");
                }
            }
        }
        private Nullable<int> _cantidadReclamada;
    
        [DataMember]
        public Nullable<bool> Aplicado
        {
            get { return _aplicado; }
            set
            {
                if (_aplicado != value)
                {
                    _aplicado = value;
                    OnPropertyChanged("Aplicado");
                }
            }
        }
        private Nullable<bool> _aplicado;
    
        [DataMember]
        public Nullable<System.DateTime> FechaAplicacion
        {
            get { return _fechaAplicacion; }
            set
            {
                if (_fechaAplicacion != value)
                {
                    _fechaAplicacion = value;
                    OnPropertyChanged("FechaAplicacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaAplicacion;
    
        [DataMember]
        public Nullable<System.DateTime> FechaVenta
        {
            get { return _fechaVenta; }
            set
            {
                if (_fechaVenta != value)
                {
                    _fechaVenta = value;
                    OnPropertyChanged("FechaVenta");
                }
            }
        }
        private Nullable<System.DateTime> _fechaVenta;
    
        [DataMember]
        public int NumeroDeVeces
        {
            get { return _numeroDeVeces; }
            set
            {
                if (_numeroDeVeces != value)
                {
                    _numeroDeVeces = value;
                    OnPropertyChanged("NumeroDeVeces");
                }
            }
        }
        private int _numeroDeVeces;
    
        [DataMember]
        public Nullable<int> IdAtendidoPor
        {
            get { return _idAtendidoPor; }
            set
            {
                if (_idAtendidoPor != value)
                {
                    ChangeTracker.RecordOriginalValue("IdAtendidoPor", _idAtendidoPor);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios1 != null && TBL_Admin_Usuarios1.IdUser != value)
                        {
                            TBL_Admin_Usuarios1 = null;
                        }
                    }
                    _idAtendidoPor = value;
                    OnPropertyChanged("IdAtendidoPor");
                }
            }
        }
        private Nullable<int> _idAtendidoPor;
    
        [DataMember]
        public string TipoContrato
        {
            get { return _tipoContrato; }
            set
            {
                if (_tipoContrato != value)
                {
                    _tipoContrato = value;
                    OnPropertyChanged("TipoContrato");
                }
            }
        }
        private string _tipoContrato;
    
        [DataMember]
        public bool RespuestaInmediata
        {
            get { return _respuestaInmediata; }
            set
            {
                if (_respuestaInmediata != value)
                {
                    _respuestaInmediata = value;
                    OnPropertyChanged("RespuestaInmediata");
                }
            }
        }
        private bool _respuestaInmediata;
    
        [DataMember]
        public string CodigoCliente
        {
            get { return _codigoCliente; }
            set
            {
                if (_codigoCliente != value)
                {
                    _codigoCliente = value;
                    OnPropertyChanged("CodigoCliente");
                }
            }
        }
        private string _codigoCliente;
    
        [DataMember]
        public string UnidadZona
        {
            get { return _unidadZona; }
            set
            {
                if (_unidadZona != value)
                {
                    _unidadZona = value;
                    OnPropertyChanged("UnidadZona");
                }
            }
        }
        private string _unidadZona;
    
        [DataMember]
        public string Contacto
        {
            get { return _contacto; }
            set
            {
                if (_contacto != value)
                {
                    _contacto = value;
                    OnPropertyChanged("Contacto");
                }
            }
        }
        private string _contacto;
    
        [DataMember]
        public string EmailContacto
        {
            get { return _emailContacto; }
            set
            {
                if (_emailContacto != value)
                {
                    _emailContacto = value;
                    OnPropertyChanged("EmailContacto");
                }
            }
        }
        private string _emailContacto;
    
        [DataMember]
        public string NombreObra
        {
            get { return _nombreObra; }
            set
            {
                if (_nombreObra != value)
                {
                    _nombreObra = value;
                    OnPropertyChanged("NombreObra");
                }
            }
        }
        private string _nombreObra;
    
        [DataMember]
        public string AplicadoPor
        {
            get { return _aplicadoPor; }
            set
            {
                if (_aplicadoPor != value)
                {
                    _aplicadoPor = value;
                    OnPropertyChanged("AplicadoPor");
                }
            }
        }
        private string _aplicadoPor;
    
        [DataMember]
        public string EmailQuienAplica
        {
            get { return _emailQuienAplica; }
            set
            {
                if (_emailQuienAplica != value)
                {
                    _emailQuienAplica = value;
                    OnPropertyChanged("EmailQuienAplica");
                }
            }
        }
        private string _emailQuienAplica;
    
        [DataMember]
        public string PropietarioObra
        {
            get { return _propietarioObra; }
            set
            {
                if (_propietarioObra != value)
                {
                    _propietarioObra = value;
                    OnPropertyChanged("PropietarioObra");
                }
            }
        }
        private string _propietarioObra;
    
        [DataMember]
        public string EmailPropietarioObra
        {
            get { return _emailPropietarioObra; }
            set
            {
                if (_emailPropietarioObra != value)
                {
                    _emailPropietarioObra = value;
                    OnPropertyChanged("EmailPropietarioObra");
                }
            }
        }
        private string _emailPropietarioObra;
    
        [DataMember]
        public string Contratista
        {
            get { return _contratista; }
            set
            {
                if (_contratista != value)
                {
                    _contratista = value;
                    OnPropertyChanged("Contratista");
                }
            }
        }
        private string _contratista;
    
        [DataMember]
        public string EmailContratista
        {
            get { return _emailContratista; }
            set
            {
                if (_emailContratista != value)
                {
                    _emailContratista = value;
                    OnPropertyChanged("EmailContratista");
                }
            }
        }
        private string _emailContratista;
    
        [DataMember]
        public string AspectoEnvase
        {
            get { return _aspectoEnvase; }
            set
            {
                if (_aspectoEnvase != value)
                {
                    _aspectoEnvase = value;
                    OnPropertyChanged("AspectoEnvase");
                }
            }
        }
        private string _aspectoEnvase;
    
        [DataMember]
        public string AspectoProducto
        {
            get { return _aspectoProducto; }
            set
            {
                if (_aspectoProducto != value)
                {
                    _aspectoProducto = value;
                    OnPropertyChanged("AspectoProducto");
                }
            }
        }
        private string _aspectoProducto;
    
        [DataMember]
        public string UsoDescripcion
        {
            get { return _usoDescripcion; }
            set
            {
                if (_usoDescripcion != value)
                {
                    _usoDescripcion = value;
                    OnPropertyChanged("UsoDescripcion");
                }
            }
        }
        private string _usoDescripcion;
    
        [DataMember]
        public string Lote
        {
            get { return _lote; }
            set
            {
                if (_lote != value)
                {
                    _lote = value;
                    OnPropertyChanged("Lote");
                }
            }
        }
        private string _lote;
    
        [DataMember]
        public Nullable<bool> MuestraDisponible
        {
            get { return _muestraDisponible; }
            set
            {
                if (_muestraDisponible != value)
                {
                    _muestraDisponible = value;
                    OnPropertyChanged("MuestraDisponible");
                }
            }
        }
        private Nullable<bool> _muestraDisponible;
    
        [DataMember]
        public Nullable<int> IdCategoriaReclamo
        {
            get { return _idCategoriaReclamo; }
            set
            {
                if (_idCategoriaReclamo != value)
                {
                    ChangeTracker.RecordOriginalValue("IdCategoriaReclamo", _idCategoriaReclamo);
                    if (!IsDeserializing)
                    {
                        if (TBL_ModuloReclamos_CategoriasReclamo != null && TBL_ModuloReclamos_CategoriasReclamo.IdCategoriaReclamo != value)
                        {
                            TBL_ModuloReclamos_CategoriasReclamo = null;
                        }
                    }
                    _idCategoriaReclamo = value;
                    OnPropertyChanged("IdCategoriaReclamo");
                }
            }
        }
        private Nullable<int> _idCategoriaReclamo;
    
        [DataMember]
        public string Area
        {
            get { return _area; }
            set
            {
                if (_area != value)
                {
                    _area = value;
                    OnPropertyChanged("Area");
                }
            }
        }
        private string _area;
    
        [DataMember]
        public string SubCategoria
        {
            get { return _subCategoria; }
            set
            {
                if (_subCategoria != value)
                {
                    _subCategoria = value;
                    OnPropertyChanged("SubCategoria");
                }
            }
        }
        private string _subCategoria;
    
        [DataMember]
        public string NumPFR
        {
            get { return _numPFR; }
            set
            {
                if (_numPFR != value)
                {
                    _numPFR = value;
                    OnPropertyChanged("NumPFR");
                }
            }
        }
        private string _numPFR;
    
        [DataMember]
        public string NumDiarioInventario
        {
            get { return _numDiarioInventario; }
            set
            {
                if (_numDiarioInventario != value)
                {
                    _numDiarioInventario = value;
                    OnPropertyChanged("NumDiarioInventario");
                }
            }
        }
        private string _numDiarioInventario;
    
        [DataMember]
        public Nullable<System.DateTime> FechaPedido
        {
            get { return _fechaPedido; }
            set
            {
                if (_fechaPedido != value)
                {
                    _fechaPedido = value;
                    OnPropertyChanged("FechaPedido");
                }
            }
        }
        private Nullable<System.DateTime> _fechaPedido;
    
        [DataMember]
        public Nullable<System.DateTime> FechaCompromiso
        {
            get { return _fechaCompromiso; }
            set
            {
                if (_fechaCompromiso != value)
                {
                    _fechaCompromiso = value;
                    OnPropertyChanged("FechaCompromiso");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCompromiso;
    
        [DataMember]
        public Nullable<System.DateTime> FechaRealEntrega
        {
            get { return _fechaRealEntrega; }
            set
            {
                if (_fechaRealEntrega != value)
                {
                    _fechaRealEntrega = value;
                    OnPropertyChanged("FechaRealEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRealEntrega;
    
        [DataMember]
        public Nullable<int> DiasDiferencia
        {
            get { return _diasDiferencia; }
            set
            {
                if (_diasDiferencia != value)
                {
                    _diasDiferencia = value;
                    OnPropertyChanged("DiasDiferencia");
                }
            }
        }
        private Nullable<int> _diasDiferencia;
    
        [DataMember]
        public string NombreReclama
        {
            get { return _nombreReclama; }
            set
            {
                if (_nombreReclama != value)
                {
                    _nombreReclama = value;
                    OnPropertyChanged("NombreReclama");
                }
            }
        }
        private string _nombreReclama;
    
        [DataMember]
        public string AreaIncumple
        {
            get { return _areaIncumple; }
            set
            {
                if (_areaIncumple != value)
                {
                    _areaIncumple = value;
                    OnPropertyChanged("AreaIncumple");
                }
            }
        }
        private string _areaIncumple;
    
        [DataMember]
        public string ProcedimientoInternoAfectado
        {
            get { return _procedimientoInternoAfectado; }
            set
            {
                if (_procedimientoInternoAfectado != value)
                {
                    _procedimientoInternoAfectado = value;
                    OnPropertyChanged("ProcedimientoInternoAfectado");
                }
            }
        }
        private string _procedimientoInternoAfectado;
    
        [DataMember]
        public string DescripcionProblema
        {
            get { return _descripcionProblema; }
            set
            {
                if (_descripcionProblema != value)
                {
                    _descripcionProblema = value;
                    OnPropertyChanged("DescripcionProblema");
                }
            }
        }
        private string _descripcionProblema;
    
        [DataMember]
        public string DiagnosticoPrevio
        {
            get { return _diagnosticoPrevio; }
            set
            {
                if (_diagnosticoPrevio != value)
                {
                    _diagnosticoPrevio = value;
                    OnPropertyChanged("DiagnosticoPrevio");
                }
            }
        }
        private string _diagnosticoPrevio;
    
        [DataMember]
        public string ConclusionesPrevias
        {
            get { return _conclusionesPrevias; }
            set
            {
                if (_conclusionesPrevias != value)
                {
                    _conclusionesPrevias = value;
                    OnPropertyChanged("ConclusionesPrevias");
                }
            }
        }
        private string _conclusionesPrevias;
    
        [DataMember]
        public Nullable<bool> ProblemaSolucionado
        {
            get { return _problemaSolucionado; }
            set
            {
                if (_problemaSolucionado != value)
                {
                    _problemaSolucionado = value;
                    OnPropertyChanged("ProblemaSolucionado");
                }
            }
        }
        private Nullable<bool> _problemaSolucionado;
    
        [DataMember]
        public string ObservacionesSolucion
        {
            get { return _observacionesSolucion; }
            set
            {
                if (_observacionesSolucion != value)
                {
                    _observacionesSolucion = value;
                    OnPropertyChanged("ObservacionesSolucion");
                }
            }
        }
        private string _observacionesSolucion;
    
        [DataMember]
        public decimal CostoReposicionProducto
        {
            get { return _costoReposicionProducto; }
            set
            {
                if (_costoReposicionProducto != value)
                {
                    _costoReposicionProducto = value;
                    OnPropertyChanged("CostoReposicionProducto");
                }
            }
        }
        private decimal _costoReposicionProducto;
    
        [DataMember]
        public decimal CostoTransporteMateriales
        {
            get { return _costoTransporteMateriales; }
            set
            {
                if (_costoTransporteMateriales != value)
                {
                    _costoTransporteMateriales = value;
                    OnPropertyChanged("CostoTransporteMateriales");
                }
            }
        }
        private decimal _costoTransporteMateriales;
    
        [DataMember]
        public decimal CostoDisposicion
        {
            get { return _costoDisposicion; }
            set
            {
                if (_costoDisposicion != value)
                {
                    _costoDisposicion = value;
                    OnPropertyChanged("CostoDisposicion");
                }
            }
        }
        private decimal _costoDisposicion;
    
        [DataMember]
        public decimal CostoPruebas
        {
            get { return _costoPruebas; }
            set
            {
                if (_costoPruebas != value)
                {
                    _costoPruebas = value;
                    OnPropertyChanged("CostoPruebas");
                }
            }
        }
        private decimal _costoPruebas;
    
        [DataMember]
        public decimal CostoManoObraDirecta
        {
            get { return _costoManoObraDirecta; }
            set
            {
                if (_costoManoObraDirecta != value)
                {
                    _costoManoObraDirecta = value;
                    OnPropertyChanged("CostoManoObraDirecta");
                }
            }
        }
        private decimal _costoManoObraDirecta;
    
        [DataMember]
        public decimal CostoExterno
        {
            get { return _costoExterno; }
            set
            {
                if (_costoExterno != value)
                {
                    _costoExterno = value;
                    OnPropertyChanged("CostoExterno");
                }
            }
        }
        private decimal _costoExterno;
    
        [DataMember]
        public decimal CostoAsistenciaTecnica
        {
            get { return _costoAsistenciaTecnica; }
            set
            {
                if (_costoAsistenciaTecnica != value)
                {
                    _costoAsistenciaTecnica = value;
                    OnPropertyChanged("CostoAsistenciaTecnica");
                }
            }
        }
        private decimal _costoAsistenciaTecnica;
    
        [DataMember]
        public decimal CostoAsistenciaTecnicaRegional
        {
            get { return _costoAsistenciaTecnicaRegional; }
            set
            {
                if (_costoAsistenciaTecnicaRegional != value)
                {
                    _costoAsistenciaTecnicaRegional = value;
                    OnPropertyChanged("CostoAsistenciaTecnicaRegional");
                }
            }
        }
        private decimal _costoAsistenciaTecnicaRegional;
    
        [DataMember]
        public decimal CostoViajes
        {
            get { return _costoViajes; }
            set
            {
                if (_costoViajes != value)
                {
                    _costoViajes = value;
                    OnPropertyChanged("CostoViajes");
                }
            }
        }
        private decimal _costoViajes;
    
        [DataMember]
        public decimal CostoArriendosEyH
        {
            get { return _costoArriendosEyH; }
            set
            {
                if (_costoArriendosEyH != value)
                {
                    _costoArriendosEyH = value;
                    OnPropertyChanged("CostoArriendosEyH");
                }
            }
        }
        private decimal _costoArriendosEyH;
    
        [DataMember]
        public decimal CostoTotal
        {
            get { return _costoTotal; }
            set
            {
                if (_costoTotal != value)
                {
                    _costoTotal = value;
                    OnPropertyChanged("CostoTotal");
                }
            }
        }
        private decimal _costoTotal;
    
        [DataMember]
        public string ObservacionesCostos
        {
            get { return _observacionesCostos; }
            set
            {
                if (_observacionesCostos != value)
                {
                    _observacionesCostos = value;
                    OnPropertyChanged("ObservacionesCostos");
                }
            }
        }
        private string _observacionesCostos;
    
        [DataMember]
        public Nullable<int> IdIngenieroResponsable
        {
            get { return _idIngenieroResponsable; }
            set
            {
                if (_idIngenieroResponsable != value)
                {
                    ChangeTracker.RecordOriginalValue("IdIngenieroResponsable", _idIngenieroResponsable);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios3 != null && TBL_Admin_Usuarios3.IdUser != value)
                        {
                            TBL_Admin_Usuarios3 = null;
                        }
                    }
                    _idIngenieroResponsable = value;
                    OnPropertyChanged("IdIngenieroResponsable");
                }
            }
        }
        private Nullable<int> _idIngenieroResponsable;
    
        [DataMember]
        public Nullable<System.DateTime> FechaCierre
        {
            get { return _fechaCierre; }
            set
            {
                if (_fechaCierre != value)
                {
                    _fechaCierre = value;
                    OnPropertyChanged("FechaCierre");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCierre;
    
        [DataMember]
        public Nullable<int> IdUsuarioCierre
        {
            get { return _idUsuarioCierre; }
            set
            {
                if (_idUsuarioCierre != value)
                {
                    ChangeTracker.RecordOriginalValue("IdUsuarioCierre", _idUsuarioCierre);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios6 != null && TBL_Admin_Usuarios6.IdUser != value)
                        {
                            TBL_Admin_Usuarios6 = null;
                        }
                    }
                    _idUsuarioCierre = value;
                    OnPropertyChanged("IdUsuarioCierre");
                }
            }
        }
        private Nullable<int> _idUsuarioCierre;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public int CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    ChangeTracker.RecordOriginalValue("CreateBy", _createBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios2 != null && TBL_Admin_Usuarios2.IdUser != value)
                        {
                            TBL_Admin_Usuarios2 = null;
                        }
                    }
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private int _createBy;
    
        [DataMember]
        public System.DateTime CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private System.DateTime _createOn;
    
        [DataMember]
        public int ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    ChangeTracker.RecordOriginalValue("ModifiedBy", _modifiedBy);
                    if (!IsDeserializing)
                    {
                        if (TBL_Admin_Usuarios4 != null && TBL_Admin_Usuarios4.IdUser != value)
                        {
                            TBL_Admin_Usuarios4 = null;
                        }
                    }
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private int _modifiedBy;
    
        [DataMember]
        public System.DateTime ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private System.DateTime _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios
        {
            get { return _tBL_Admin_Usuarios; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios, value))
                {
                    var previousValue = _tBL_Admin_Usuarios;
                    _tBL_Admin_Usuarios = value;
                    FixupTBL_Admin_Usuarios(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios1
        {
            get { return _tBL_Admin_Usuarios1; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios1, value))
                {
                    var previousValue = _tBL_Admin_Usuarios1;
                    _tBL_Admin_Usuarios1 = value;
                    FixupTBL_Admin_Usuarios1(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios1");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios1;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios2
        {
            get { return _tBL_Admin_Usuarios2; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios2, value))
                {
                    var previousValue = _tBL_Admin_Usuarios2;
                    _tBL_Admin_Usuarios2 = value;
                    FixupTBL_Admin_Usuarios2(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios2");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios2;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios3
        {
            get { return _tBL_Admin_Usuarios3; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios3, value))
                {
                    var previousValue = _tBL_Admin_Usuarios3;
                    _tBL_Admin_Usuarios3 = value;
                    FixupTBL_Admin_Usuarios3(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios3");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios3;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios4
        {
            get { return _tBL_Admin_Usuarios4; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios4, value))
                {
                    var previousValue = _tBL_Admin_Usuarios4;
                    _tBL_Admin_Usuarios4 = value;
                    FixupTBL_Admin_Usuarios4(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios4");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios4;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios5
        {
            get { return _tBL_Admin_Usuarios5; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios5, value))
                {
                    var previousValue = _tBL_Admin_Usuarios5;
                    _tBL_Admin_Usuarios5 = value;
                    FixupTBL_Admin_Usuarios5(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios5");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios5;
    
        [DataMember]
        public TBL_Admin_Usuarios TBL_Admin_Usuarios6
        {
            get { return _tBL_Admin_Usuarios6; }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios6, value))
                {
                    var previousValue = _tBL_Admin_Usuarios6;
                    _tBL_Admin_Usuarios6 = value;
                    FixupTBL_Admin_Usuarios6(previousValue);
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios6");
                }
            }
        }
        private TBL_Admin_Usuarios _tBL_Admin_Usuarios6;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloReclamos_Actividades> TBL_ModuloReclamos_Actividades
        {
            get
            {
                if (_tBL_ModuloReclamos_Actividades == null)
                {
                    _tBL_ModuloReclamos_Actividades = new TrackableCollection<TBL_ModuloReclamos_Actividades>();
                    _tBL_ModuloReclamos_Actividades.CollectionChanged += FixupTBL_ModuloReclamos_Actividades;
                }
                return _tBL_ModuloReclamos_Actividades;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_Actividades, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloReclamos_Actividades != null)
                    {
                        _tBL_ModuloReclamos_Actividades.CollectionChanged -= FixupTBL_ModuloReclamos_Actividades;
                    }
                    _tBL_ModuloReclamos_Actividades = value;
                    if (_tBL_ModuloReclamos_Actividades != null)
                    {
                        _tBL_ModuloReclamos_Actividades.CollectionChanged += FixupTBL_ModuloReclamos_Actividades;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_Actividades");
                }
            }
        }
        private TrackableCollection<TBL_ModuloReclamos_Actividades> _tBL_ModuloReclamos_Actividades;
    
        [DataMember]
        public TBL_ModuloReclamos_CategoriasReclamo TBL_ModuloReclamos_CategoriasReclamo
        {
            get { return _tBL_ModuloReclamos_CategoriasReclamo; }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_CategoriasReclamo, value))
                {
                    var previousValue = _tBL_ModuloReclamos_CategoriasReclamo;
                    _tBL_ModuloReclamos_CategoriasReclamo = value;
                    FixupTBL_ModuloReclamos_CategoriasReclamo(previousValue);
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_CategoriasReclamo");
                }
            }
        }
        private TBL_ModuloReclamos_CategoriasReclamo _tBL_ModuloReclamos_CategoriasReclamo;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloReclamos_CostosProducto> TBL_ModuloReclamos_CostosProducto
        {
            get
            {
                if (_tBL_ModuloReclamos_CostosProducto == null)
                {
                    _tBL_ModuloReclamos_CostosProducto = new TrackableCollection<TBL_ModuloReclamos_CostosProducto>();
                    _tBL_ModuloReclamos_CostosProducto.CollectionChanged += FixupTBL_ModuloReclamos_CostosProducto;
                }
                return _tBL_ModuloReclamos_CostosProducto;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_CostosProducto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloReclamos_CostosProducto != null)
                    {
                        _tBL_ModuloReclamos_CostosProducto.CollectionChanged -= FixupTBL_ModuloReclamos_CostosProducto;
                    }
                    _tBL_ModuloReclamos_CostosProducto = value;
                    if (_tBL_ModuloReclamos_CostosProducto != null)
                    {
                        _tBL_ModuloReclamos_CostosProducto.CollectionChanged += FixupTBL_ModuloReclamos_CostosProducto;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_CostosProducto");
                }
            }
        }
        private TrackableCollection<TBL_ModuloReclamos_CostosProducto> _tBL_ModuloReclamos_CostosProducto;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloReclamos_Reclamo> TBL_ModuloReclamos_Reclamo1
        {
            get
            {
                if (_tBL_ModuloReclamos_Reclamo1 == null)
                {
                    _tBL_ModuloReclamos_Reclamo1 = new TrackableCollection<TBL_ModuloReclamos_Reclamo>();
                    _tBL_ModuloReclamos_Reclamo1.CollectionChanged += FixupTBL_ModuloReclamos_Reclamo1;
                }
                return _tBL_ModuloReclamos_Reclamo1;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_Reclamo1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloReclamos_Reclamo1 != null)
                    {
                        _tBL_ModuloReclamos_Reclamo1.CollectionChanged -= FixupTBL_ModuloReclamos_Reclamo1;
                    }
                    _tBL_ModuloReclamos_Reclamo1 = value;
                    if (_tBL_ModuloReclamos_Reclamo1 != null)
                    {
                        _tBL_ModuloReclamos_Reclamo1.CollectionChanged += FixupTBL_ModuloReclamos_Reclamo1;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_Reclamo1");
                }
            }
        }
        private TrackableCollection<TBL_ModuloReclamos_Reclamo> _tBL_ModuloReclamos_Reclamo1;
    
        [DataMember]
        public TBL_ModuloReclamos_Reclamo TBL_ModuloReclamos_Reclamo2
        {
            get { return _tBL_ModuloReclamos_Reclamo2; }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_Reclamo2, value))
                {
                    var previousValue = _tBL_ModuloReclamos_Reclamo2;
                    _tBL_ModuloReclamos_Reclamo2 = value;
                    FixupTBL_ModuloReclamos_Reclamo2(previousValue);
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_Reclamo2");
                }
            }
        }
        private TBL_ModuloReclamos_Reclamo _tBL_ModuloReclamos_Reclamo2;
    
        [DataMember]
        public TBL_ModuloReclamos_TipoReclamo TBL_ModuloReclamos_TipoReclamo
        {
            get { return _tBL_ModuloReclamos_TipoReclamo; }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_TipoReclamo, value))
                {
                    var previousValue = _tBL_ModuloReclamos_TipoReclamo;
                    _tBL_ModuloReclamos_TipoReclamo = value;
                    FixupTBL_ModuloReclamos_TipoReclamo(previousValue);
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_TipoReclamo");
                }
            }
        }
        private TBL_ModuloReclamos_TipoReclamo _tBL_ModuloReclamos_TipoReclamo;
    
        [DataMember]
        public TrackableCollection<TBL_ModuloReclamos_Soluciones> TBL_ModuloReclamos_Soluciones
        {
            get
            {
                if (_tBL_ModuloReclamos_Soluciones == null)
                {
                    _tBL_ModuloReclamos_Soluciones = new TrackableCollection<TBL_ModuloReclamos_Soluciones>();
                    _tBL_ModuloReclamos_Soluciones.CollectionChanged += FixupTBL_ModuloReclamos_Soluciones;
                }
                return _tBL_ModuloReclamos_Soluciones;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloReclamos_Soluciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloReclamos_Soluciones != null)
                    {
                        _tBL_ModuloReclamos_Soluciones.CollectionChanged -= FixupTBL_ModuloReclamos_Soluciones;
                    }
                    _tBL_ModuloReclamos_Soluciones = value;
                    if (_tBL_ModuloReclamos_Soluciones != null)
                    {
                        _tBL_ModuloReclamos_Soluciones.CollectionChanged += FixupTBL_ModuloReclamos_Soluciones;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloReclamos_Soluciones");
                }
            }
        }
        private TrackableCollection<TBL_ModuloReclamos_Soluciones> _tBL_ModuloReclamos_Soluciones;
    
        [DataMember]
        public TrackableCollection<TBL_Admin_Usuarios> TBL_Admin_Usuarios7
        {
            get
            {
                if (_tBL_Admin_Usuarios7 == null)
                {
                    _tBL_Admin_Usuarios7 = new TrackableCollection<TBL_Admin_Usuarios>();
                    _tBL_Admin_Usuarios7.CollectionChanged += FixupTBL_Admin_Usuarios7;
                }
                return _tBL_Admin_Usuarios7;
            }
            set
            {
                if (!ReferenceEquals(_tBL_Admin_Usuarios7, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_Admin_Usuarios7 != null)
                    {
                        _tBL_Admin_Usuarios7.CollectionChanged -= FixupTBL_Admin_Usuarios7;
                    }
                    _tBL_Admin_Usuarios7 = value;
                    if (_tBL_Admin_Usuarios7 != null)
                    {
                        _tBL_Admin_Usuarios7.CollectionChanged += FixupTBL_Admin_Usuarios7;
                    }
                    OnNavigationPropertyChanged("TBL_Admin_Usuarios7");
                }
            }
        }
        private TrackableCollection<TBL_Admin_Usuarios> _tBL_Admin_Usuarios7;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_Admin_Usuarios = null;
            TBL_Admin_Usuarios1 = null;
            TBL_Admin_Usuarios2 = null;
            TBL_Admin_Usuarios3 = null;
            TBL_Admin_Usuarios4 = null;
            TBL_Admin_Usuarios5 = null;
            TBL_Admin_Usuarios6 = null;
            TBL_ModuloReclamos_Actividades.Clear();
            TBL_ModuloReclamos_CategoriasReclamo = null;
            TBL_ModuloReclamos_CostosProducto.Clear();
            TBL_ModuloReclamos_Reclamo1.Clear();
            TBL_ModuloReclamos_Reclamo2 = null;
            TBL_ModuloReclamos_TipoReclamo = null;
            TBL_ModuloReclamos_Soluciones.Clear();
            TBL_Admin_Usuarios7.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_Admin_Usuarios(TBL_Admin_Usuarios previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo.Remove(this);
            }
    
            if (TBL_Admin_Usuarios != null)
            {
                if (!TBL_Admin_Usuarios.TBL_ModuloReclamos_Reclamo.Contains(this))
                {
                    TBL_Admin_Usuarios.TBL_ModuloReclamos_Reclamo.Add(this);
                }
    
                IdAsesoradoPor = TBL_Admin_Usuarios.IdUser;
            }
            else if (!skipKeys)
            {
                IdAsesoradoPor = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios"] == TBL_Admin_Usuarios))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios", previousValue);
                }
                if (TBL_Admin_Usuarios != null && !TBL_Admin_Usuarios.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios1(TBL_Admin_Usuarios previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo1.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo1.Remove(this);
            }
    
            if (TBL_Admin_Usuarios1 != null)
            {
                if (!TBL_Admin_Usuarios1.TBL_ModuloReclamos_Reclamo1.Contains(this))
                {
                    TBL_Admin_Usuarios1.TBL_ModuloReclamos_Reclamo1.Add(this);
                }
    
                IdAtendidoPor = TBL_Admin_Usuarios1.IdUser;
            }
            else if (!skipKeys)
            {
                IdAtendidoPor = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios1")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios1"] == TBL_Admin_Usuarios1))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios1", previousValue);
                }
                if (TBL_Admin_Usuarios1 != null && !TBL_Admin_Usuarios1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios1.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios2(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo2.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo2.Remove(this);
            }
    
            if (TBL_Admin_Usuarios2 != null)
            {
                if (!TBL_Admin_Usuarios2.TBL_ModuloReclamos_Reclamo2.Contains(this))
                {
                    TBL_Admin_Usuarios2.TBL_ModuloReclamos_Reclamo2.Add(this);
                }
    
                CreateBy = TBL_Admin_Usuarios2.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios2")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios2"] == TBL_Admin_Usuarios2))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios2", previousValue);
                }
                if (TBL_Admin_Usuarios2 != null && !TBL_Admin_Usuarios2.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios2.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios3(TBL_Admin_Usuarios previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo3.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo3.Remove(this);
            }
    
            if (TBL_Admin_Usuarios3 != null)
            {
                if (!TBL_Admin_Usuarios3.TBL_ModuloReclamos_Reclamo3.Contains(this))
                {
                    TBL_Admin_Usuarios3.TBL_ModuloReclamos_Reclamo3.Add(this);
                }
    
                IdIngenieroResponsable = TBL_Admin_Usuarios3.IdUser;
            }
            else if (!skipKeys)
            {
                IdIngenieroResponsable = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios3")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios3"] == TBL_Admin_Usuarios3))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios3", previousValue);
                }
                if (TBL_Admin_Usuarios3 != null && !TBL_Admin_Usuarios3.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios3.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios4(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo4.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo4.Remove(this);
            }
    
            if (TBL_Admin_Usuarios4 != null)
            {
                if (!TBL_Admin_Usuarios4.TBL_ModuloReclamos_Reclamo4.Contains(this))
                {
                    TBL_Admin_Usuarios4.TBL_ModuloReclamos_Reclamo4.Add(this);
                }
    
                ModifiedBy = TBL_Admin_Usuarios4.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios4")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios4"] == TBL_Admin_Usuarios4))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios4");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios4", previousValue);
                }
                if (TBL_Admin_Usuarios4 != null && !TBL_Admin_Usuarios4.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios4.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios5(TBL_Admin_Usuarios previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo5.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo5.Remove(this);
            }
    
            if (TBL_Admin_Usuarios5 != null)
            {
                if (!TBL_Admin_Usuarios5.TBL_ModuloReclamos_Reclamo5.Contains(this))
                {
                    TBL_Admin_Usuarios5.TBL_ModuloReclamos_Reclamo5.Add(this);
                }
    
                IdSolicitante = TBL_Admin_Usuarios5.IdUser;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios5")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios5"] == TBL_Admin_Usuarios5))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios5");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios5", previousValue);
                }
                if (TBL_Admin_Usuarios5 != null && !TBL_Admin_Usuarios5.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios5.StartTracking();
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios6(TBL_Admin_Usuarios previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo6.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo6.Remove(this);
            }
    
            if (TBL_Admin_Usuarios6 != null)
            {
                if (!TBL_Admin_Usuarios6.TBL_ModuloReclamos_Reclamo6.Contains(this))
                {
                    TBL_Admin_Usuarios6.TBL_ModuloReclamos_Reclamo6.Add(this);
                }
    
                IdUsuarioCierre = TBL_Admin_Usuarios6.IdUser;
            }
            else if (!skipKeys)
            {
                IdUsuarioCierre = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_Admin_Usuarios6")
                    && (ChangeTracker.OriginalValues["TBL_Admin_Usuarios6"] == TBL_Admin_Usuarios6))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_Admin_Usuarios6");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_Admin_Usuarios6", previousValue);
                }
                if (TBL_Admin_Usuarios6 != null && !TBL_Admin_Usuarios6.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_Admin_Usuarios6.StartTracking();
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_CategoriasReclamo(TBL_ModuloReclamos_CategoriasReclamo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo.Remove(this);
            }
    
            if (TBL_ModuloReclamos_CategoriasReclamo != null)
            {
                if (!TBL_ModuloReclamos_CategoriasReclamo.TBL_ModuloReclamos_Reclamo.Contains(this))
                {
                    TBL_ModuloReclamos_CategoriasReclamo.TBL_ModuloReclamos_Reclamo.Add(this);
                }
    
                IdCategoriaReclamo = TBL_ModuloReclamos_CategoriasReclamo.IdCategoriaReclamo;
            }
            else if (!skipKeys)
            {
                IdCategoriaReclamo = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_ModuloReclamos_CategoriasReclamo")
                    && (ChangeTracker.OriginalValues["TBL_ModuloReclamos_CategoriasReclamo"] == TBL_ModuloReclamos_CategoriasReclamo))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_ModuloReclamos_CategoriasReclamo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_ModuloReclamos_CategoriasReclamo", previousValue);
                }
                if (TBL_ModuloReclamos_CategoriasReclamo != null && !TBL_ModuloReclamos_CategoriasReclamo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_ModuloReclamos_CategoriasReclamo.StartTracking();
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_Reclamo2(TBL_ModuloReclamos_Reclamo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo1.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo1.Remove(this);
            }
    
            if (TBL_ModuloReclamos_Reclamo2 != null)
            {
                if (!TBL_ModuloReclamos_Reclamo2.TBL_ModuloReclamos_Reclamo1.Contains(this))
                {
                    TBL_ModuloReclamos_Reclamo2.TBL_ModuloReclamos_Reclamo1.Add(this);
                }
    
                IdReclamoRelacionado = TBL_ModuloReclamos_Reclamo2.IdReclamo;
            }
            else if (!skipKeys)
            {
                IdReclamoRelacionado = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_ModuloReclamos_Reclamo2")
                    && (ChangeTracker.OriginalValues["TBL_ModuloReclamos_Reclamo2"] == TBL_ModuloReclamos_Reclamo2))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_ModuloReclamos_Reclamo2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_ModuloReclamos_Reclamo2", previousValue);
                }
                if (TBL_ModuloReclamos_Reclamo2 != null && !TBL_ModuloReclamos_Reclamo2.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_ModuloReclamos_Reclamo2.StartTracking();
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_TipoReclamo(TBL_ModuloReclamos_TipoReclamo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloReclamos_Reclamo.Contains(this))
            {
                previousValue.TBL_ModuloReclamos_Reclamo.Remove(this);
            }
    
            if (TBL_ModuloReclamos_TipoReclamo != null)
            {
                if (!TBL_ModuloReclamos_TipoReclamo.TBL_ModuloReclamos_Reclamo.Contains(this))
                {
                    TBL_ModuloReclamos_TipoReclamo.TBL_ModuloReclamos_Reclamo.Add(this);
                }
    
                IdTipoReclamo = TBL_ModuloReclamos_TipoReclamo.IdTipoReclamo;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_ModuloReclamos_TipoReclamo")
                    && (ChangeTracker.OriginalValues["TBL_ModuloReclamos_TipoReclamo"] == TBL_ModuloReclamos_TipoReclamo))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_ModuloReclamos_TipoReclamo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_ModuloReclamos_TipoReclamo", previousValue);
                }
                if (TBL_ModuloReclamos_TipoReclamo != null && !TBL_ModuloReclamos_TipoReclamo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_ModuloReclamos_TipoReclamo.StartTracking();
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_Actividades(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloReclamos_Actividades item in e.NewItems)
                {
                    item.TBL_ModuloReclamos_Reclamo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloReclamos_Actividades", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloReclamos_Actividades item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloReclamos_Reclamo, this))
                    {
                        item.TBL_ModuloReclamos_Reclamo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloReclamos_Actividades", item);
                    }
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_CostosProducto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloReclamos_CostosProducto item in e.NewItems)
                {
                    item.TBL_ModuloReclamos_Reclamo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloReclamos_CostosProducto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloReclamos_CostosProducto item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloReclamos_Reclamo, this))
                    {
                        item.TBL_ModuloReclamos_Reclamo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloReclamos_CostosProducto", item);
                    }
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_Reclamo1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloReclamos_Reclamo item in e.NewItems)
                {
                    item.TBL_ModuloReclamos_Reclamo2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloReclamos_Reclamo1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloReclamos_Reclamo item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloReclamos_Reclamo2, this))
                    {
                        item.TBL_ModuloReclamos_Reclamo2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloReclamos_Reclamo1", item);
                    }
                }
            }
        }
    
        private void FixupTBL_ModuloReclamos_Soluciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloReclamos_Soluciones item in e.NewItems)
                {
                    item.TBL_ModuloReclamos_Reclamo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloReclamos_Soluciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloReclamos_Soluciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloReclamos_Reclamo, this))
                    {
                        item.TBL_ModuloReclamos_Reclamo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloReclamos_Soluciones", item);
                    }
                }
            }
        }
    
        private void FixupTBL_Admin_Usuarios7(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_Admin_Usuarios item in e.NewItems)
                {
                    if (!item.TBL_ModuloReclamos_Reclamo7.Contains(this))
                    {
                        item.TBL_ModuloReclamos_Reclamo7.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_Admin_Usuarios7", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_Admin_Usuarios item in e.OldItems)
                {
                    if (item.TBL_ModuloReclamos_Reclamo7.Contains(this))
                    {
                        item.TBL_ModuloReclamos_Reclamo7.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_Admin_Usuarios7", item);
                    }
                }
            }
        }

        #endregion
    }
}
