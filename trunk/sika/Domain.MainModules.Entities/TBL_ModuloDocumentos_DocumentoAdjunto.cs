//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_ModuloDocumentos_Documento))]
    
    public partial class TBL_ModuloDocumentos_DocumentoAdjunto: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdDocumentoAdjunto
        {
            get { return _idDocumentoAdjunto; }
            set
            {
                if (_idDocumentoAdjunto != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdDocumentoAdjunto' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idDocumentoAdjunto = value;
                    OnPropertyChanged("IdDocumentoAdjunto");
                }
            }
        }
        private int _idDocumentoAdjunto;
    
        [DataMember]
        public int IdDocumento
        {
            get { return _idDocumento; }
            set
            {
                if (_idDocumento != value)
                {
                    ChangeTracker.RecordOriginalValue("IdDocumento", _idDocumento);
                    if (!IsDeserializing)
                    {
                        if (TBL_ModuloDocumentos_Documento != null && TBL_ModuloDocumentos_Documento.IdDocumento != value)
                        {
                            TBL_ModuloDocumentos_Documento = null;
                        }
                    }
                    _idDocumento = value;
                    OnPropertyChanged("IdDocumento");
                }
            }
        }
        private int _idDocumento;
    
        [DataMember]
        public string NombreArchivo
        {
            get { return _nombreArchivo; }
            set
            {
                if (_nombreArchivo != value)
                {
                    _nombreArchivo = value;
                    OnPropertyChanged("NombreArchivo");
                }
            }
        }
        private string _nombreArchivo;
    
        [DataMember]
        public byte[] Archivo
        {
            get { return _archivo; }
            set
            {
                if (_archivo != value)
                {
                    _archivo = value;
                    OnPropertyChanged("Archivo");
                }
            }
        }
        private byte[] _archivo;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public System.DateTime CrateOn
        {
            get { return _crateOn; }
            set
            {
                if (_crateOn != value)
                {
                    _crateOn = value;
                    OnPropertyChanged("CrateOn");
                }
            }
        }
        private System.DateTime _crateOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public System.DateTime ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private System.DateTime _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TBL_ModuloDocumentos_Documento TBL_ModuloDocumentos_Documento
        {
            get { return _tBL_ModuloDocumentos_Documento; }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloDocumentos_Documento, value))
                {
                    var previousValue = _tBL_ModuloDocumentos_Documento;
                    _tBL_ModuloDocumentos_Documento = value;
                    FixupTBL_ModuloDocumentos_Documento(previousValue);
                    OnNavigationPropertyChanged("TBL_ModuloDocumentos_Documento");
                }
            }
        }
        private TBL_ModuloDocumentos_Documento _tBL_ModuloDocumentos_Documento;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_ModuloDocumentos_Documento = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_ModuloDocumentos_Documento(TBL_ModuloDocumentos_Documento previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.TBL_ModuloDocumentos_DocumentoAdjunto.Contains(this))
            {
                previousValue.TBL_ModuloDocumentos_DocumentoAdjunto.Remove(this);
            }
    
            if (TBL_ModuloDocumentos_Documento != null)
            {
                if (!TBL_ModuloDocumentos_Documento.TBL_ModuloDocumentos_DocumentoAdjunto.Contains(this))
                {
                    TBL_ModuloDocumentos_Documento.TBL_ModuloDocumentos_DocumentoAdjunto.Add(this);
                }
    
                IdDocumento = TBL_ModuloDocumentos_Documento.IdDocumento;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TBL_ModuloDocumentos_Documento")
                    && (ChangeTracker.OriginalValues["TBL_ModuloDocumentos_Documento"] == TBL_ModuloDocumentos_Documento))
                {
                    ChangeTracker.OriginalValues.Remove("TBL_ModuloDocumentos_Documento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TBL_ModuloDocumentos_Documento", previousValue);
                }
                if (TBL_ModuloDocumentos_Documento != null && !TBL_ModuloDocumentos_Documento.ChangeTracker.ChangeTrackingEnabled)
                {
                    TBL_ModuloDocumentos_Documento.StartTracking();
                }
            }
        }

        #endregion
    }
}
