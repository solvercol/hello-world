//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

using Domain.Core.Entities;

namespace Domain.MainModules.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TBL_ModuloPlanAccion_ConfiguracionActividades))]
    
    public partial class TBL_ModuloPlanAccion_BancoActividades: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int IdActividad
        {
            get { return _idActividad; }
            set
            {
                if (_idActividad != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IdActividad' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _idActividad = value;
                    OnPropertyChanged("IdActividad");
                }
            }
        }
        private int _idActividad;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public bool TienePregunta
        {
            get { return _tienePregunta; }
            set
            {
                if (_tienePregunta != value)
                {
                    _tienePregunta = value;
                    OnPropertyChanged("TienePregunta");
                }
            }
        }
        private bool _tienePregunta;
    
        [DataMember]
        public string Pregunta
        {
            get { return _pregunta; }
            set
            {
                if (_pregunta != value)
                {
                    _pregunta = value;
                    OnPropertyChanged("Pregunta");
                }
            }
        }
        private string _pregunta;
    
        [DataMember]
        public bool TieneAnexo
        {
            get { return _tieneAnexo; }
            set
            {
                if (_tieneAnexo != value)
                {
                    _tieneAnexo = value;
                    OnPropertyChanged("TieneAnexo");
                }
            }
        }
        private bool _tieneAnexo;
    
        [DataMember]
        public string TipoRespuesta
        {
            get { return _tipoRespuesta; }
            set
            {
                if (_tipoRespuesta != value)
                {
                    _tipoRespuesta = value;
                    OnPropertyChanged("TipoRespuesta");
                }
            }
        }
        private string _tipoRespuesta;
    
        [DataMember]
        public string ValoresRespuesta
        {
            get { return _valoresRespuesta; }
            set
            {
                if (_valoresRespuesta != value)
                {
                    _valoresRespuesta = value;
                    OnPropertyChanged("ValoresRespuesta");
                }
            }
        }
        private string _valoresRespuesta;
    
        [DataMember]
        public Nullable<bool> ComentariosObligatorios
        {
            get { return _comentariosObligatorios; }
            set
            {
                if (_comentariosObligatorios != value)
                {
                    _comentariosObligatorios = value;
                    OnPropertyChanged("ComentariosObligatorios");
                }
            }
        }
        private Nullable<bool> _comentariosObligatorios;
    
        [DataMember]
        public string RespuestaObligatoria
        {
            get { return _respuestaObligatoria; }
            set
            {
                if (_respuestaObligatoria != value)
                {
                    _respuestaObligatoria = value;
                    OnPropertyChanged("RespuestaObligatoria");
                }
            }
        }
        private string _respuestaObligatoria;
    
        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged("IsActive");
                }
            }
        }
        private bool _isActive;
    
        [DataMember]
        public string CreateBy
        {
            get { return _createBy; }
            set
            {
                if (_createBy != value)
                {
                    _createBy = value;
                    OnPropertyChanged("CreateBy");
                }
            }
        }
        private string _createBy;
    
        [DataMember]
        public Nullable<System.DateTime> CreateOn
        {
            get { return _createOn; }
            set
            {
                if (_createOn != value)
                {
                    _createOn = value;
                    OnPropertyChanged("CreateOn");
                }
            }
        }
        private Nullable<System.DateTime> _createOn;
    
        [DataMember]
        public string ModifiedBy
        {
            get { return _modifiedBy; }
            set
            {
                if (_modifiedBy != value)
                {
                    _modifiedBy = value;
                    OnPropertyChanged("ModifiedBy");
                }
            }
        }
        private string _modifiedBy;
    
        [DataMember]
        public Nullable<System.DateTime> ModifiedOn
        {
            get { return _modifiedOn; }
            set
            {
                if (_modifiedOn != value)
                {
                    _modifiedOn = value;
                    OnPropertyChanged("ModifiedOn");
                }
            }
        }
        private Nullable<System.DateTime> _modifiedOn;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<TBL_ModuloPlanAccion_ConfiguracionActividades> TBL_ModuloPlanAccion_ConfiguracionActividades
        {
            get
            {
                if (_tBL_ModuloPlanAccion_ConfiguracionActividades == null)
                {
                    _tBL_ModuloPlanAccion_ConfiguracionActividades = new TrackableCollection<TBL_ModuloPlanAccion_ConfiguracionActividades>();
                    _tBL_ModuloPlanAccion_ConfiguracionActividades.CollectionChanged += FixupTBL_ModuloPlanAccion_ConfiguracionActividades;
                }
                return _tBL_ModuloPlanAccion_ConfiguracionActividades;
            }
            set
            {
                if (!ReferenceEquals(_tBL_ModuloPlanAccion_ConfiguracionActividades, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tBL_ModuloPlanAccion_ConfiguracionActividades != null)
                    {
                        _tBL_ModuloPlanAccion_ConfiguracionActividades.CollectionChanged -= FixupTBL_ModuloPlanAccion_ConfiguracionActividades;
                    }
                    _tBL_ModuloPlanAccion_ConfiguracionActividades = value;
                    if (_tBL_ModuloPlanAccion_ConfiguracionActividades != null)
                    {
                        _tBL_ModuloPlanAccion_ConfiguracionActividades.CollectionChanged += FixupTBL_ModuloPlanAccion_ConfiguracionActividades;
                    }
                    OnNavigationPropertyChanged("TBL_ModuloPlanAccion_ConfiguracionActividades");
                }
            }
        }
        private TrackableCollection<TBL_ModuloPlanAccion_ConfiguracionActividades> _tBL_ModuloPlanAccion_ConfiguracionActividades;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TBL_ModuloPlanAccion_ConfiguracionActividades.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupTBL_ModuloPlanAccion_ConfiguracionActividades(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TBL_ModuloPlanAccion_ConfiguracionActividades item in e.NewItems)
                {
                    item.TBL_ModuloPlanAccion_BancoActividades = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TBL_ModuloPlanAccion_ConfiguracionActividades", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TBL_ModuloPlanAccion_ConfiguracionActividades item in e.OldItems)
                {
                    if (ReferenceEquals(item.TBL_ModuloPlanAccion_BancoActividades, this))
                    {
                        item.TBL_ModuloPlanAccion_BancoActividades = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TBL_ModuloPlanAccion_ConfiguracionActividades", item);
                    }
                }
            }
        }

        #endregion
    }
}
